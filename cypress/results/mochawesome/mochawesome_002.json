{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-07T06:30:54.135Z",
    "end": "2022-10-07T06:31:04.063Z",
    "duration": 9928,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "802ccb08-1009-4df7-ae75-4bff0cafd400",
      "title": "",
      "fullFile": "cypress\\e2e\\firstTest.spec.js",
      "file": "cypress\\e2e\\firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ae497c9-09ba-4842-ba95-f652dc73f4fb",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "delete article in a global feed",
              "fullTitle": "Test with backend delete article in a global feed",
              "timedOut": null,
              "duration": 9806,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const userCredentials = {\n  user: {\n    email: \"artem.bondar16@gmail.com\",\n    password: \"CypressTest1\"\n  }\n};\nconst bodyRequest = {\n  article: {\n    tagList: [],\n    title: \"@Sample Title\",\n    description: \"sample description\",\n    body: \"sample body\"\n  }\n}; // ****  used the token request within the test ****\n// cy.request('POST', 'https://api.realworld.io/api/users/login', userCredentials)\n// .its('body').then(body => {\n//     const token = body.user.token;\n//     cy.request({\n//             url: 'https://api.realworld.io/api/articles/',\n//             headers: {'authorization': 'Token '+token},\n//             method: 'POST',\n//             body: bodyRequest\n//         }).then(res => {\n//             expect(res.status).to.equal(200)\n//         });\n//         cy.contains('Global Feed').click();\n//         cy.get('.article-preview').first().click();\n//         cy.get('.article-actions').contains('Delete Article').click()\n//         cy.wait(500);\n//         cy.request({\n//             url: 'https://api.realworld.io/api/articles/?limit=10&offset=0',\n//             headers: {'authorization': 'Token '+token},\n//             method: 'GET',\n//         }).its('body').then(body => {\n//             expect(body.articles[0].title).not.to.equal('@Sample Title');\n//         });\n//     });\n// ****  used the token saved in the localStorage ****\ncy.get('@token').then(token => {\n  cy.request({\n    url: 'https://api.realworld.io/api/articles/',\n    headers: {\n      'authorization': 'Token ' + token\n    },\n    method: 'POST',\n    body: bodyRequest\n  }).then(res => {\n    expect(res.status).to.equal(200);\n  });\n  cy.contains('Global Feed').click();\n  cy.get('.article-preview').first().click();\n  cy.get('.article-actions').contains('Delete Article').click();\n  cy.wait(500);\n  cy.request({\n    url: 'https://api.realworld.io/api/articles/?limit=10&offset=0',\n    headers: {\n      'authorization': 'Token ' + token\n    },\n    method: 'GET'\n  }).its('body').then(body => {\n    expect(body.articles[0].title).not.to.equal('@Sample Title');\n  });\n});",
              "err": {},
              "uuid": "dbf4bc78-4220-4de6-be5a-3a34cdbe5aa6",
              "parentUUID": "8ae497c9-09ba-4842-ba95-f652dc73f4fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbf4bc78-4220-4de6-be5a-3a34cdbe5aa6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9806,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}